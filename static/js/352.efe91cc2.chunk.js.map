{"version":3,"file":"static/js/352.efe91cc2.chunk.js","mappings":"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","sources":["redux/contact/contact.selectors.js","components/FormUserMenu/FormUserMenu.jsx","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/UserMenu.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.phonebook.contacts;\nexport const selectIsLoading = state => state.phonebook.isLoading;\nexport const selectError = state => state.phonebook.error;\nexport const selectContactsFilter = state => state.phonebook.filter;\n\nexport const selectFilterContacts = createSelector([selectContacts, selectContactsFilter],\n    (contacts, filter) => contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase().trim())));\n    ","import css from \"components/Styles.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContactsThunk } from \"../../redux/contact/contact.reducer\";\nimport { selectContacts } from \"../../redux/contact/contact.selectors\";\n\nexport const FormUserMenu =() => {\n  const dispatch = useDispatch()\n  const contacts = useSelector(selectContacts)\n\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const newContact = {\n            name: event.target.elements.name.value,\n            number: event.target.elements.number.value,\n    };\n\n    const hasDuplicates = contacts.some(item => item.name === newContact.name);\n\n    if (hasDuplicates) {\n      alert(`${newContact.name} is already in the contacts list`);\n      return;\n    }\n   \n    dispatch(addContactsThunk(newContact));\n\n    form.reset();\n  };\n\nreturn (\n\n    <div>\n  \n    <h1 className={css.titlePage}>Phonebook</h1>\n\n    <form className={css.form} onSubmit={onFormSubmit}>\n    <label className={css.titleItem}>\n      Name:\n    </label>\n\n        <input\n      className={css.input}\n      type=\"text\"\n      name=\"name\"\n      \n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      required\n    />\n\n    <label className={css.titleItem}>\n      Number:\n    </label>\n\n        <input\n      className={css.input}\n      type=\"tel\"\n      name=\"number\"\n     \n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      required\n    />\n\n    <button className={css.btn} type=\"submit\">\n      Add Contact\n    </button>\n  </form>\n  </div> \n)\n}","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\n\nimport css from \"components/Styles.module.css\"\nimport { deleteContactsThunk } from '../../redux/contact/contact.reducer';\n\nexport const ContactElement = ({ id, name, number }) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useDispatch()\n  \n  const onDelete = contactId => {\n\n    setIsLoading(true);\n    dispatch(deleteContactsThunk(contactId));\n    setIsLoading(false);\n  };\n\n  return (\n    <li>\n      <span className={css.item}>\n        {name}:\n      </span>\n\n      <span className={css.item}>\n        {number}\n      </span>\n      \n      <button\n        className={css.btnDel}\n        id={name}\n        disabled={isLoading}\n        onClick={() => { onDelete(id) }}>\n        Delete\n      </button>\n    </li>\n  );\n};","import { ContactElement } from \"components/ContactElement/ContactElement\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from \"react\";\nimport Loader from \"components/Loader/Loader\";\nimport { selectFilterContacts } from '../../redux/contact/contact.selectors';\nimport { getContactsThunk } from \"../../redux/contact/contact.reducer\";\nimport css from '../../components/Styles.module.css'\n\n\nexport const ContactList = () => {\n\n  const isLoading = useSelector(state => state.isLoading);\n  const error = useSelector(state => state.error);\n  const dispatch = useDispatch();\n\n  const contactsFilter = useSelector(selectFilterContacts);\n  useEffect(() => {\n    dispatch(getContactsThunk())\n  }, [dispatch]);\n  \n    return (\n    <div>\n      \n        <ul className={css.contactList}>\n          {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n         {contactsFilter.map(({ id, name, number }) => (\n          <ContactElement\n            key={id}\n            id={id}\n            name={name}\n            number={number} />\n        ))}\n      </ul>\n    </div>\n  );\n};","import css from \"components/Styles.module.css\";\nimport { useDispatch } from 'react-redux';\nimport {  changeFilter } from '../../redux/contact/contact.reducer';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n    return (\n        <div>\n      <label className={css.filter}>\n        <span className={css.titleItem}>Find contacts by name</span>\n                <input\n                    className={css.inputFilter}\n          type=\"text\"\n          name=\"filter\"\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};","import React from 'react';\nimport { FormUserMenu } from 'components/FormUserMenu/FormUserMenu';\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from '../components/Styles.module.css'\nconst UserMenu =() => {\n  \n    return(\n        <div className={css.UP}>\n   <div className={css.UM_main}>\n<FormUserMenu/>\n<h2 className={css.titlePage}>Contacts:</h2>\n<Filter/>\n</div>\n<ContactList/>\n        </div> \n    )\n    \n}\n\nexport default UserMenu;"],"names":["selectContacts","state","phonebook","contacts","selectFilterContacts","createSelector","filter","_ref","name","toLowerCase","includes","trim","FormUserMenu","dispatch","useDispatch","useSelector","_jsxs","children","_jsx","className","css","onSubmit","event","preventDefault","form","target","newContact","elements","value","number","some","item","alert","concat","addContactsThunk","reset","type","pattern","required","ContactElement","id","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","disabled","onClick","contactId","deleteContactsThunk","ContactList","error","contactsFilter","useEffect","getContactsThunk","Loader","map","Filter","onChange","changeFilter"],"sourceRoot":""}